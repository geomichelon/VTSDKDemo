plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
}

android {
    namespace 'com.geomichelon.vtsdk'
    compileSdk 34

    defaultConfig {
        minSdk 24
        targetSdk 34
        consumerProguardFiles 'consumer-rules.pro'
        ndk { abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64' }
        externalNativeBuild { cmake { cppFlags "-std=c++17" } }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug { debuggable true }
    }

    buildFeatures { buildConfig = false }

    externalNativeBuild {
        cmake { path file('src/main/cpp/CMakeLists.txt') }
    }

    packagingOptions {
        jniLibs { useLegacyPackaging false }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.8.2'
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                groupId = project.findProperty('PUBLISH_GROUP') ?: 'com.geomichelon'
                artifactId = project.findProperty('PUBLISH_ARTIFACT') ?: 'vt-sdk-android'
                version = project.findProperty('PUBLISH_VERSION') ?: '0.0.0-dev'
                artifact("${buildDir}/outputs/aar/${project.name}-release.aar")
                pom {
                    name = 'VT SDK Android'
                    description = 'Visual Testing SDK (FFI) packaged for Android'
                    url = 'https://github.com/geomichelon/VTSDKDemo'
                    licenses { license { name = 'Proprietary'; url = 'https://github.com/geomichelon/VTSDKDemo' } }
                    scm { url = 'https://github.com/geomichelon/VTSDKDemo' }
                }
            }
        }
        repositories {
            maven {
                name = 'GitHubPackages'
                url = uri("https://maven.pkg.github.com/geomichelon/VTSDKDemo")
                credentials {
                    username = System.getenv('GITHUB_ACTOR') ?: project.findProperty('gpr.user')
                    password = System.getenv('GITHUB_TOKEN') ?: project.findProperty('gpr.key')
                }
            }
        }
    }
}

